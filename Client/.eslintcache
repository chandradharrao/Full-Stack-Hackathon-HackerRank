[{"/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/index.js":"1","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/App.js":"2","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Routing.js":"3","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Navbar/Navbar.js":"4","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/reducers/userDetailsReducer.js":"5","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Menu/Menu.js":"6","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Success/SuccessPage.js":"7","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Checkout/Payment.js":"8","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Profile/Profile.js":"9","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Auth/Login/SignIn.js":"10","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Auth/Registration/RegForm.js":"11","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Menu/MenuFooter.js":"12","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/FoodCards/FoodCards.js":"13","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Auth/Registration/PreviewForm.js":"14","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/FoodCards/FoodItems.js":"15"},{"size":218,"mtime":1611506677350,"results":"16","hashOfConfig":"17"},{"size":1335,"mtime":1611506677350,"results":"18","hashOfConfig":"17"},{"size":1784,"mtime":1611506677350,"results":"19","hashOfConfig":"17"},{"size":1409,"mtime":1611506677350,"results":"20","hashOfConfig":"17"},{"size":591,"mtime":1611506677350,"results":"21","hashOfConfig":"17"},{"size":5242,"mtime":1611576124743,"results":"22","hashOfConfig":"17"},{"size":920,"mtime":1611506677350,"results":"23","hashOfConfig":"17"},{"size":2061,"mtime":1611575967349,"results":"24","hashOfConfig":"17"},{"size":1679,"mtime":1611506677350,"results":"25","hashOfConfig":"17"},{"size":4524,"mtime":1611574647707,"results":"26","hashOfConfig":"17"},{"size":18218,"mtime":1611576693078,"results":"27","hashOfConfig":"17"},{"size":567,"mtime":1611506677350,"results":"28","hashOfConfig":"17"},{"size":933,"mtime":1611506677350,"results":"29","hashOfConfig":"17"},{"size":1106,"mtime":1611576432990,"results":"30","hashOfConfig":"17"},{"size":1400,"mtime":1611576973186,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1w0ouf",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/index.js",[],["66","67"],"/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/App.js",[],"/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Routing.js",["68","69"],"import {useEffect,useContext} from 'react';\nimport {Route,Switch,useHistory} from 'react-router-dom';\nimport Menu from './Menu/Menu';\nimport SuccessPage from './Success/SuccessPage'\nimport Payment from \"./Checkout/Payment\";\nimport {UserDetailsContext} from \"../App\"\nimport SignIn from './Auth/Login/SignIn';\nimport RegForm from './Auth/Registration/RegForm';\nimport Profile from './Profile/Profile';\n\n//render component based on the nav link\nfunction Routing(){\n    //grab dispatch and state from context provider\n    const {state,dispatch} = useContext(UserDetailsContext);\n    const history = useHistory();\n\n    //on mounting of component check if user data already is availabe in localstorage\n    useEffect(() => {\n        //grab user data from localstorage\n        let userDetails = null;\n        if(localStorage.getItem(\"user\") === \"undefined\"){\n            userDetails = null;\n        }else{\n           userDetails = JSON.parse(localStorage.getItem(\"user\"));\n        }\n        //update redux state\n        dispatch({type:\"SET_USER_DETAILS\",payload:userDetails})\n\n        //based on the userData obtained from localstorage\n        if(userDetails === null){\n        //redirect to sign in page\n        history.push('/signin')\n        }\n        else{\n        //redirect to menu\n        //history.push('/menu')\n        }\n    }, [])\n\n    return(\n        <Switch>\n            <Route path = \"/signin\" component={SignIn}/>\n            <Route path = '/signup' component={RegForm}/>\n            <Route path = '/successpage/:id/:empid' component={SuccessPage}/>\n            <Route path = \"/menu\" component={Menu}/>\n            <Route path = \"/payment/:amount\" component={Payment}/>\n            <Route path = \"/profile\" component={Profile}/>\n        </Switch>\n    )\n}\n\nexport default Routing","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Navbar/Navbar.js",[],"/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/reducers/userDetailsReducer.js",[],"/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Menu/Menu.js",[],"/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Success/SuccessPage.js",[],"/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Checkout/Payment.js",["70"],"/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Profile/Profile.js",[],"/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Auth/Login/SignIn.js",["71"],"import {useState,useContext} from 'react';\nimport {Link,useHistory} from 'react-router-dom';\nimport {UserDetailsContext} from \"../../../App\"\nimport { toast } from 'react-toastify';\nimport \"./Signin.css\"\n\ntoast.configure();\n\nfunction SignIn(){\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [load,setLoad] = useState(\"\");\n    const [rem,setRem] = useState(localStorage.getItem(\"rememberMe\") === null?false:JSON.parse(localStorage.getItem(\"rememberMe\")).bool);\n    const history = useHistory();\n    //destructure the state and dispatch function from context provider's value\n    const {state,dispatch} = useContext(UserDetailsContext);\n\n    function onChangeHandler(event) {\n        if(event.target.name === \"username\"){\n            setUsername(event.target.value);\n        }else if(event.target.name === 'password'){\n            setPassword(event.target.value);\n        }\n    }\n\n    //func to remeber me\n    function rememebrMeFunc(e){\n        setRem(e.target.checked);\n        console.log(e.target.checked);\n        localStorage.setItem(\"rememberMe\",JSON.stringify({bool:e.target.checked}))\n    }\n\n    function onClickHandler(event){\n        //prevent default action of reloading\n        event.preventDefault()\n        const reqOptions = {\n            method:\"POST\",\n            headers:{'Content-Type': 'application/json'},\n            body:JSON.stringify({\n                username,\n                password\n            })\n        };\n        console.log(\"Trying to fetch...\")\n        \n        fetch(\"/login\",reqOptions).then(res=>{return res.json()}).then((data)=>{\n            console.log(\"Made fetch req and recieved res\")\n            \n            //loading\n            setLoad(<div className=\"progress\">\n                        <div className=\"indeterminate\"></div>\n                    </div>)\n            console.log(data);\n            if(data.success){\n                //make a toast with success massage\n                toast.success(data.message);\n\n                //store token and user info present in response in local storage\n                localStorage.setItem(\"jwt\",data.token);\n                console.log(data.user);\n                localStorage.setItem(\"user\",JSON.stringify(data.user));\n                console.log(\"Successfull login.....\")\n\n                //only dispatch is allowed to change state by dispatching action\n                //store user data in redux state\n                dispatch({type:\"SET_USER_DETAILS\",payload:data.user})\n                \n                //navigate user to menu\n                setTimeout(()=>{\n                    history.push('/menu');\n                },1000)\n            }else{\n                setLoad(null);\n                //make toast with failure message\n                toast.error(data.message);\n                console.log(data.error + \" : \" + data.message);\n            }\n        });\n    }\n\n    return(\n        <div className=\"container-login\">\n            {load}\n            <div className=\"loginWrapper\">\n                <div className='form-content-left'>\n                    <img className='form-img' src='/cafeLogo.jpg' alt=\"logo\"/>\n                </div>\n                <div className=\"form-content-right\">\n                    <form>\n                        <h1 className=\"login\">Login</h1>\n                        <div className=\"input-field\">\n                            <input type=\"text\" value ={username} onChange={(event)=>{onChangeHandler(event)}} name=\"username\" placeholder=\"Employee ID\"/>\n                        </div>\n                        <div className=\"input-field\">\n                            <input type=\"password\" value={password} onChange={(event)=>{onChangeHandler(event)}} name=\"password\" placeholder=\"Password\"/>\n                        </div>\n                        <div className=\"input-field\">\n                            <button className=\"submit\" onClick={(event)=>onClickHandler(event)}>SignIn</button>\n                        </div>\n                        <br/>\n                        \n                        <span className=\"remember\">Remember Me</span> <br/>\n                        <input className=\"flipswitch\" type=\"checkbox\" checked={rem} onChange={(e)=>rememebrMeFunc(e)}/>\n                        <br/> <br/>\n                        <Link className=\"already\" to=\"/signup\">Dont have an account?</Link>\n                       \n                    </form>\n                </div>\n            </div>\n        </div> \n    )\n}\n\nexport default SignIn;","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Auth/Registration/RegForm.js",["72","73","74","75","76","77","78"],"/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Menu/MenuFooter.js",[],"/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/FoodCards/FoodCards.js",["79"],"import React, {useContext} from 'react';\nimport './FoodCards.css';\nimport FoodItem from './FoodItems';\n\n\nfunction FoodCards(props) {\n  const map = props.menu.items.map((item,id)=>{\n                return [\n                    <FoodItem\n                      key = {id}\n                      src='/food.jpg'\n                      text={item.name}\n                      description = {item.description}\n                      label='Not spicy'\n                      addItem={props.addItem}\n                      removeItem={props.removeItem}\n                      price={item.price}\n                      count={item.quantity}\n                      category={props.menu.category}\n                    />\n                ]\n          });\n  return (\n    <div className='foodMenu'>      \n      <h3 className=\"menu-category\">{props.menu.category}</h3>\n      <ul className='foodContainer'>{map}</ul>\n    </div>\n  )\n}\n\nexport default FoodCards;","/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/Auth/Registration/PreviewForm.js",[],"/home/dhruval/Desktop/Full-Stack-Hackathon-HackerRank/Client/src/components/FoodCards/FoodItems.js",["80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":14,"column":12,"nodeType":"87","messageId":"88","endLine":14,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":38,"column":8,"nodeType":"91","endLine":38,"endColumn":10,"suggestions":"92"},{"ruleId":"85","severity":1,"message":"93","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":16,"column":12,"nodeType":"87","messageId":"88","endLine":16,"endColumn":17},{"ruleId":"85","severity":1,"message":"94","line":34,"column":12,"nodeType":"87","messageId":"88","endLine":34,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":42,"column":12,"nodeType":"87","messageId":"88","endLine":42,"endColumn":17},{"ruleId":"89","severity":1,"message":"95","line":151,"column":7,"nodeType":"91","endLine":151,"endColumn":13,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":403,"column":80,"nodeType":"99","endLine":403,"endColumn":95},{"ruleId":"97","severity":1,"message":"98","line":406,"column":80,"nodeType":"99","endLine":406,"endColumn":95},{"ruleId":"97","severity":1,"message":"98","line":410,"column":52,"nodeType":"99","endLine":410,"endColumn":70},{"ruleId":"97","severity":1,"message":"98","line":412,"column":64,"nodeType":"99","endLine":412,"endColumn":82},{"ruleId":"85","severity":1,"message":"100","line":1,"column":16,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"102","line":9,"column":13,"nodeType":"103","endLine":13,"endColumn":15},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["106"],"'useState' is defined but never used.","'errMsgs' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cloudinaryUploadPromise', 'dispatch', 'email', 'empID', 'formErrors', 'history', 'mobNo', 'name', 'orgName', 'password', and 'valid'. Either include them or remove the dependency array.",["107"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useContext' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [dispatch, history]",{"range":"112","text":"113"},"Update the dependencies array to be: [cloudinaryUploadPromise, comp, dispatch, email, empID, formErrors, history, mobNo, name, orgName, password, valid]",{"range":"114","text":"115"},[1329,1331],"[dispatch, history]",[6932,6938],"[cloudinaryUploadPromise, comp, dispatch, email, empID, formErrors, history, mobNo, name, orgName, password, valid]"]